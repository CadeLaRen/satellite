
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'U&+\xbd\xb8L\x18]\x8ae\xb5\x1eHQ\xbd\x13'
    
_lr_action_items = {'DIVIDE':([2,4,6,15,16,17,18,19,21,],[-8,9,-7,-12,-11,9,9,-13,9,]),'STRING':([0,1,2,4,6,9,10,11,12,13,15,16,17,18,19,20,21,],[-1,2,-8,-2,-7,2,2,2,2,2,-12,-11,-9,-10,-13,2,-14,]),'INT':([0,1,2,4,6,9,10,11,12,13,15,16,17,18,19,20,21,],[-1,3,-8,-2,-7,3,3,3,3,3,-12,-11,-9,-10,-13,3,-14,]),'DOUBLE':([0,1,2,4,6,9,10,11,12,13,15,16,17,18,19,20,21,],[-1,7,-8,-2,-7,7,7,7,7,7,-12,-11,-9,-10,-13,7,-14,]),'FLOAT':([0,1,2,4,6,9,10,11,12,13,15,16,17,18,19,20,21,],[-1,5,-8,-2,-7,5,5,5,5,5,-12,-11,-9,-10,-13,5,-14,]),'NUMBER':([0,1,2,4,6,9,10,11,12,13,15,16,17,18,19,20,21,],[-1,6,-8,-2,-7,6,6,6,6,6,-12,-11,-9,-10,-13,6,-14,]),'TIMES':([2,4,6,15,16,17,18,19,21,],[-8,10,-7,-12,-11,10,10,-13,10,]),'EQUALS':([14,],[20,]),'PLUS':([2,4,6,15,16,17,18,19,21,],[-8,11,-7,-12,-11,-9,-10,-13,11,]),'MOD':([2,4,6,15,16,17,18,19,21,],[-8,13,-7,-12,-11,13,13,-13,13,]),'IDENTIFIER':([2,3,5,7,8,],[-6,-3,-4,-5,14,]),'MINUS':([2,4,6,15,16,17,18,19,21,],[-8,12,-7,-12,-11,-9,-10,-13,12,]),'$end':([0,1,2,4,6,15,16,17,18,19,21,],[-1,0,-8,-2,-7,-12,-11,-9,-10,-13,-14,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr':([1,9,10,11,12,13,20,],[4,15,16,17,18,19,21,]),'type':([1,9,10,11,12,13,20,],[8,8,8,8,8,8,8,]),'exprlist':([0,],[1,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> exprlist","S'",1,None,None,None),
  ('exprlist -> <empty>','exprlist',0,'p_explist','meccaParser.py',11),
  ('exprlist -> exprlist expr','exprlist',2,'p_explist','meccaParser.py',12),
  ('type -> INT','type',1,'p_type','meccaParser.py',20),
  ('type -> FLOAT','type',1,'p_type','meccaParser.py',21),
  ('type -> DOUBLE','type',1,'p_type','meccaParser.py',22),
  ('type -> STRING','type',1,'p_type','meccaParser.py',23),
  ('expr -> NUMBER','expr',1,'p_number','meccaParser.py',28),
  ('expr -> STRING','expr',1,'p_string','meccaParser.py',32),
  ('expr -> expr PLUS expr','expr',3,'p_expr_binary','meccaParser.py',36),
  ('expr -> expr MINUS expr','expr',3,'p_expr_binary','meccaParser.py',37),
  ('expr -> expr TIMES expr','expr',3,'p_expr_binary','meccaParser.py',38),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_binary','meccaParser.py',39),
  ('expr -> expr MOD expr','expr',3,'p_expr_binary','meccaParser.py',40),
  ('expr -> type IDENTIFIER EQUALS expr','expr',4,'p_expr_assign','meccaParser.py',53),
]
